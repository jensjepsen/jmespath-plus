import {
  InputSignature,
  TYPE_ANY,
  TYPE_ARRAY,
  TYPE_ARRAY_NUMBER,
  TYPE_ARRAY_STRING,
  TYPE_BOOLEAN,
  TYPE_NULL,
  TYPE_NUMBER,
  TYPE_OBJECT,
  TYPE_STRING,
} from '@metrichor/jmespath';

const TYPE_PRIMITIVES = [TYPE_STRING, TYPE_BOOLEAN, TYPE_NUMBER, TYPE_NULL];
const TYPE_JSON = [...TYPE_PRIMITIVES, TYPE_OBJECT, TYPE_ARRAY];

export const SUPPORTED_FUNCTIONS: [string, InputSignature[] | null][] = [
  // Array
  ['chunk', [{ types: [TYPE_ARRAY] }, { types: [TYPE_NUMBER], optional: true }]],
  ['compact', [{ types: [TYPE_ARRAY] }]],
  ['concat', [{ types: [TYPE_ARRAY] }, { types: [TYPE_ANY], optional: true, variadic: true }]],
  ['difference', [{ types: [TYPE_ARRAY] }, { types: [TYPE_ARRAY], optional: true }]],
  [
    'differenceBy',
    [{ types: [TYPE_ARRAY] }, { types: [TYPE_ARRAY], optional: true }, { types: [TYPE_ANY], optional: true }],
  ],
  ['differenceWith', null],
  ['drop', [{ types: [TYPE_ARRAY] }, { types: [TYPE_NUMBER], optional: true }]],
  ['dropRight', [{ types: [TYPE_ARRAY] }, { types: [TYPE_NUMBER], optional: true }]],
  ['dropRightWhile', [{ types: [TYPE_ARRAY] }, { types: [TYPE_ARRAY, TYPE_STRING, TYPE_OBJECT], optional: true }]],
  ['dropWhile', [{ types: [TYPE_ARRAY] }, { types: [TYPE_ARRAY, TYPE_STRING, TYPE_OBJECT], optional: true }]],
  [
    'fill',
    [
      { types: [TYPE_ARRAY] },
      { types: [TYPE_ANY] },
      { types: [TYPE_NUMBER], optional: true },
      { types: [TYPE_NUMBER], optional: true },
    ],
  ],
  [
    'findIndex',
    [
      { types: [TYPE_ARRAY] },
      { types: [TYPE_ARRAY, TYPE_STRING, TYPE_OBJECT], optional: true },
      { types: [TYPE_NUMBER], optional: true },
    ],
  ],
  [
    'findLastIndex',
    [
      { types: [TYPE_ARRAY] },
      { types: [TYPE_ARRAY, TYPE_STRING, TYPE_OBJECT], optional: true },
      { types: [TYPE_NUMBER], optional: true },
    ],
  ],
  ['first', [{ types: [TYPE_ARRAY] }]],
  ['flatten', [{ types: [TYPE_ARRAY] }]],
  ['flattenDeep', [{ types: [TYPE_ARRAY] }]],
  ['flattenDepth', [{ types: [TYPE_ARRAY] }, { types: [TYPE_NUMBER], optional: true }]],
  ['fromPairs', [{ types: [TYPE_ARRAY] }]],
  ['head', [{ types: [TYPE_ARRAY] }]],
  [
    'indexOf',
    [{ types: [TYPE_ARRAY] }, { types: TYPE_PRIMITIVES, optional: true }, { types: [TYPE_NUMBER], optional: true }],
  ],
  ['initial', [{ types: [TYPE_ARRAY] }]],
  ['intersection', [{ types: [TYPE_ARRAY], variadic: true }]],
  // ['intersectionBy', null],
  // ['intersectionWith', null],
  ['join', [{ types: [TYPE_ARRAY] }, { types: [TYPE_STRING], optional: true }]],
  ['last', [{ types: [TYPE_ARRAY] }]],
  [
    'lastIndexOf',
    [{ types: [TYPE_ARRAY] }, { types: TYPE_PRIMITIVES, optional: true }, { types: [TYPE_NUMBER], optional: true }],
  ],
  ['nth', [{ types: [TYPE_ARRAY] }, { types: [TYPE_NUMBER], optional: true }]],
  ['pull', [{ types: [TYPE_ARRAY] }, { types: TYPE_PRIMITIVES, optional: true, variadic: true }]],
  ['pullAll', [{ types: [TYPE_ARRAY] }, { types: [TYPE_ARRAY], optional: true }]],
  ['pullAllBy', [{ types: [TYPE_ARRAY] }, { types: [TYPE_ARRAY] }, { types: [TYPE_STRING], optional: true }]],
  // ['pullAllWith', null],
  ['pullAt', [{ types: [TYPE_ARRAY] }, { types: [TYPE_NUMBER, TYPE_ARRAY_NUMBER], optional: true }]],
  ['remove', [{ types: [TYPE_ARRAY] }, { types: [TYPE_OBJECT], optional: true }]],
  ['reverse', [{ types: [TYPE_ARRAY] }]],
  [
    'slice',
    [{ types: [TYPE_ARRAY] }, { types: [TYPE_NUMBER], optional: true }, { types: [TYPE_NUMBER], optional: true }],
  ],
  ['sortedIndex', [{ types: [TYPE_ARRAY] }, { types: TYPE_PRIMITIVES }]],
  [
    'sortedIndexBy',
    [
      { types: [TYPE_ARRAY] },
      { types: [...TYPE_PRIMITIVES, TYPE_OBJECT, TYPE_ARRAY] },
      { types: [TYPE_STRING], optional: true },
    ],
  ],
  ['sortedIndexOf', [{ types: [TYPE_ARRAY] }, { types: TYPE_PRIMITIVES }]],
  ['sortedLastIndex', [{ types: [TYPE_ARRAY] }, { types: TYPE_PRIMITIVES }]],
  [
    'sortedLastIndexBy',
    [
      { types: [TYPE_ARRAY] },
      { types: [...TYPE_PRIMITIVES, TYPE_OBJECT, TYPE_ARRAY] },
      { types: [TYPE_STRING], optional: true },
    ],
  ],
  ['sortedLastIndexOf', [{ types: [TYPE_ARRAY] }, { types: TYPE_PRIMITIVES }]],
  ['sortedUniq', [{ types: [TYPE_ARRAY] }]],
  // ['sortedUniqBy', null],
  ['tail', [{ types: [TYPE_ARRAY] }]],
  ['take', [{ types: [TYPE_ARRAY] }, { types: [TYPE_NUMBER], optional: true }]],
  ['takeRight', [{ types: [TYPE_ARRAY] }, { types: [TYPE_NUMBER], optional: true }]],
  ['takeRightWhile', [{ types: [TYPE_ARRAY] }, { types: [TYPE_STRING, TYPE_OBJECT, TYPE_ARRAY], optional: true }]],
  ['takeWhile', [{ types: [TYPE_ARRAY] }, { types: [TYPE_STRING, TYPE_OBJECT, TYPE_ARRAY], optional: true }]],
  ['union', [{ types: [TYPE_ARRAY], variadic: true }]],
  // ['unionBy', null],
  // ['unionWith', null],
  ['uniq', [{ types: [TYPE_ARRAY] }]],
  ['uniqBy', [{ types: [TYPE_ARRAY] }, { types: [TYPE_STRING], optional: true }]],
  // ['uniqWith', null],
  ['unzip', [{ types: [TYPE_ARRAY] }]],
  // ['unzipWith', null],
  ['without', [{ types: [TYPE_ARRAY] }, { types: TYPE_PRIMITIVES, variadic: true, optional: true }]],
  ['xor', [{ types: [TYPE_ARRAY], variadic: true }]],
  // ['xorBy', null],
  // ['xorWith', null],
  ['zip', [{ types: [TYPE_ARRAY], variadic: true }]],
  [
    'zipObject',
    [
      { types: [TYPE_ARRAY_STRING], optional: true },
      { types: [...TYPE_PRIMITIVES, TYPE_OBJECT, TYPE_ARRAY], optional: true },
    ],
  ],
  [
    'zipObjectDeep',
    [
      { types: [TYPE_ARRAY_STRING], optional: true },
      { types: [...TYPE_PRIMITIVES, TYPE_OBJECT, TYPE_ARRAY], optional: true },
    ],
  ],
  // ['zipWith', null],

  // Collection
  ['countBy', [{ types: [TYPE_ARRAY, TYPE_OBJECT] }, { types: [TYPE_STRING], optional: true }]],
  ['each', [{ types: [TYPE_ARRAY, TYPE_OBJECT] }, { types: [TYPE_ANY], optional: true }]],
  ['eachRight', [{ types: [TYPE_ARRAY, TYPE_OBJECT] }, { types: [TYPE_ANY], optional: true }]],
  [
    'every',
    [{ types: [TYPE_ARRAY, TYPE_OBJECT] }, { types: [...TYPE_PRIMITIVES, TYPE_OBJECT, TYPE_ARRAY], optional: true }],
  ],
  [
    'filter',
    [{ types: [TYPE_ARRAY, TYPE_OBJECT] }, { types: [...TYPE_PRIMITIVES, TYPE_OBJECT, TYPE_ARRAY], optional: true }],
  ],
  [
    'find',
    [
      { types: [TYPE_ARRAY, TYPE_OBJECT] },
      { types: [...TYPE_PRIMITIVES, TYPE_OBJECT, TYPE_ARRAY], optional: true },
      { types: [TYPE_NUMBER], optional: true },
    ],
  ],
  [
    'findLast',
    [
      { types: [TYPE_ARRAY, TYPE_OBJECT] },
      { types: [...TYPE_PRIMITIVES, TYPE_OBJECT, TYPE_ARRAY], optional: true },
      { types: [TYPE_NUMBER], optional: true },
    ],
  ],
  ['flatMap', [{ types: [TYPE_ARRAY, TYPE_OBJECT] }, { types: [TYPE_ANY], optional: true }]],
  ['flatMapDeep', [{ types: [TYPE_ARRAY, TYPE_OBJECT] }, { types: [TYPE_ANY], optional: true }]],
  [
    'flatMapDepth',
    [
      { types: [TYPE_ARRAY, TYPE_OBJECT] },
      { types: [TYPE_ANY], optional: true },
      { types: [TYPE_NUMBER], optional: true },
    ],
  ],
  ['forEach', [{ types: [TYPE_ARRAY, TYPE_OBJECT] }, { types: [TYPE_ANY], optional: true }]],
  ['forEachRight', [{ types: [TYPE_ARRAY, TYPE_OBJECT] }, { types: [TYPE_ANY], optional: true }]],
  ['groupBy', [{ types: [TYPE_ARRAY, TYPE_OBJECT] }, { types: [TYPE_ANY], optional: true }]],
  [
    'includes',
    [
      { types: [TYPE_ARRAY, TYPE_OBJECT, TYPE_STRING] },
      { types: [...TYPE_PRIMITIVES, TYPE_OBJECT, TYPE_ARRAY] },
      { types: [TYPE_NUMBER], optional: true },
    ],
  ],
  [
    'invokeMap',
    [
      { types: [TYPE_ARRAY, TYPE_OBJECT] },
      { types: [TYPE_ARRAY, TYPE_STRING] },
      { types: [...TYPE_PRIMITIVES, TYPE_OBJECT, TYPE_ARRAY], optional: true, variadic: true },
    ],
  ],
  ['keyBy', [{ types: [TYPE_ARRAY, TYPE_OBJECT, TYPE_STRING] }, { types: [TYPE_OBJECT, TYPE_STRING], optional: true }]],
  ['map', [{ types: [TYPE_ARRAY, TYPE_OBJECT, TYPE_STRING] }, { types: [TYPE_OBJECT, TYPE_STRING], optional: true }]],
  [
    'orderBy',
    [
      { types: [TYPE_ARRAY, TYPE_OBJECT, TYPE_STRING] },
      { types: [TYPE_ARRAY], optional: true },
      { types: [TYPE_ARRAY_STRING], optional: true },
    ],
  ],
  [
    'partition',
    [
      { types: [TYPE_ARRAY, TYPE_OBJECT, TYPE_STRING] },
      { types: [...TYPE_PRIMITIVES, TYPE_OBJECT, TYPE_ARRAY], optional: true },
    ],
  ],
  [
    'reduce',
    [
      { types: [TYPE_ARRAY, TYPE_OBJECT, TYPE_STRING] },
      { types: [TYPE_OBJECT], optional: true },
      { types: [TYPE_OBJECT, TYPE_ARRAY], optional: true },
    ],
  ],
  [
    'reduceRight',
    [
      { types: [TYPE_ARRAY, TYPE_OBJECT, TYPE_STRING] },
      { types: [TYPE_OBJECT], optional: true },
      { types: [TYPE_OBJECT, TYPE_ARRAY], optional: true },
    ],
  ],
  [
    'reject',
    [
      { types: [TYPE_ARRAY, TYPE_OBJECT, TYPE_STRING] },
      { types: [TYPE_OBJECT, TYPE_ARRAY, TYPE_STRING], optional: true },
    ],
  ],
  ['sample', [{ types: [TYPE_ARRAY, TYPE_OBJECT] }]],
  ['sampleSize', [{ types: [TYPE_ARRAY, TYPE_OBJECT] }, { types: [TYPE_NUMBER], optional: true }]],
  ['shuffle', [{ types: [TYPE_ARRAY, TYPE_OBJECT] }]],
  ['size', [{ types: [TYPE_ARRAY, TYPE_OBJECT] }]],
  ['some', [{ types: [TYPE_ARRAY, TYPE_OBJECT] }, { types: [TYPE_OBJECT, TYPE_ARRAY, TYPE_STRING], optional: true }]],
  ['sortBy', [{ types: [TYPE_ARRAY, TYPE_OBJECT] }, { types: [TYPE_OBJECT, TYPE_ARRAY], optional: true }]],

  // // Date
  //   'now',

  // // Function
  //   'after',
  //   'ary',
  //   'before',
  //   'bind',
  //   'bindKey',
  //   'curry',
  //   'curryRight',
  //   'debounce',
  //   'defer',
  //   'delay',
  //   'flip',
  //   'memoize',
  //   'negate',
  //   'once',
  //   'overArgs',
  //   'partial',
  //   'partialRight',
  //   'rearg',
  //   'rest',
  //   'spread',
  //   'throttle',
  //   'unary',
  //   'wrap',

  // Lang
  ['castArray', [{ types: TYPE_JSON }]],
  // ['clone', null],
  // ['cloneDeep', null],
  // ['cloneDeepWith', null],
  // ['cloneWith', null],
  // ['conformsTo', null],
  ['eq', [{ types: TYPE_JSON }, { types: TYPE_JSON }]],
  ['gt', [{ types: TYPE_JSON }, { types: TYPE_JSON }]],
  ['gte', [{ types: TYPE_JSON }, { types: TYPE_JSON }]],
  // ['isArguments', null],
  // ['isArray', null],
  // ['isArrayBuffer', null],
  // ['isArrayLike', null],
  // ['isArrayLikeObject', null],
  // ['isBoolean', null],
  // ['isBuffer', null],
  // ['isDate', null],
  // ['isElement', null],
  // ['isEmpty', null],
  // ['isEqual', null],
  // ['isEqualWith', null],
  // ['isError', null],
  // ['isFinite', null],
  // ['isFunction', null],
  // ['isInteger', null],
  // ['isLength', null],
  // ['isMap', null],
  // ['isMatch', null],
  // ['isMatchWith', null],
  // ['isNaN', null],
  // ['isNative', null],
  // ['isNil', null],
  // ['isNull', null],
  // ['isNumber', null],
  // ['isObject', null],
  // ['isObjectLike', null],
  // ['isPlainObject', null],
  // ['isRegExp', null],
  // ['isSafeInteger', null],
  // ['isSet', null],
  // ['isString', null],
  // ['isSymbol', null],
  // ['isTypedArray', null],
  // ['isUndefined', null],
  // ['isWeakMap', null],
  // ['isWeakSet', null],
  ['lt', [{ types: TYPE_JSON }, { types: TYPE_JSON }]],
  ['lte', [{ types: TYPE_JSON }, { types: TYPE_JSON }]],
  // ['toArray', null],
  // ['toFinite', null],
  // ['toInteger', null],
  // ['toLength', null],
  // ['toNumber', null],
  // ['toPlainObject', null],
  // ['toSafeInteger', null],
  // ['toString', null],

  // Math
  ['add', [{ types: [TYPE_NUMBER] }, { types: [TYPE_NUMBER] }]],
  ['ceil', [{ types: [TYPE_NUMBER] }, { types: [TYPE_NUMBER], optional: true }]],
  ['divide', [{ types: [TYPE_NUMBER] }, { types: [TYPE_NUMBER] }]],
  ['floor', [{ types: [TYPE_NUMBER] }, { types: [TYPE_NUMBER], optional: true }]],
  ['max', [{ types: [TYPE_ARRAY_NUMBER] }]],
  ['maxBy', [{ types: [TYPE_ARRAY] }, { types: [TYPE_OBJECT, TYPE_STRING], optional: true }]],
  ['mean', [{ types: [TYPE_ARRAY] }]],
  ['meanBy', [{ types: [TYPE_ARRAY] }, { types: [TYPE_OBJECT, TYPE_STRING], optional: true }]],
  ['min', [{ types: [TYPE_ARRAY] }]],
  ['minBy', [{ types: [TYPE_ARRAY] }, { types: [TYPE_OBJECT, TYPE_STRING], optional: true }]],
  ['multiply', [{ types: [TYPE_NUMBER] }, { types: [TYPE_NUMBER] }]],
  ['round', [{ types: [TYPE_NUMBER] }, { types: [TYPE_NUMBER], optional: true }]],
  ['subtract', [{ types: [TYPE_NUMBER] }, { types: [TYPE_NUMBER] }]],
  ['sum', [{ types: [TYPE_ARRAY] }]],
  ['sumBy', [{ types: [TYPE_ARRAY] }, { types: [TYPE_OBJECT, TYPE_STRING], optional: true }]],

  // Number
  ['clamp', [{ types: [TYPE_NUMBER] }, { types: [TYPE_NUMBER], optional: true }, { types: [TYPE_NUMBER] }]],
  ['inRange', [{ types: [TYPE_NUMBER] }, { types: [TYPE_NUMBER], optional: true }, { types: [TYPE_NUMBER] }]],
  [
    'random',
    [
      { types: [TYPE_NUMBER], optional: true },
      { types: [TYPE_NUMBER], optional: true },
      { types: [TYPE_NUMBER], optional: true },
    ],
  ],

  // Object
  ['assign', [{ types: [TYPE_OBJECT] }, { types: [TYPE_OBJECT], variadic: true, optional: true }]],
  ['assignIn', [{ types: [TYPE_OBJECT] }, { types: [TYPE_OBJECT], variadic: true, optional: true }]],
  // ['assignInWith', null],
  // ['assignWith', null],
  ['at', [{ types: [TYPE_OBJECT] }, { types: [TYPE_STRING, TYPE_ARRAY_STRING], variadic: true, optional: true }]],
  // ['create', null],
  ['defaults', [{ types: [TYPE_OBJECT] }, { types: [TYPE_OBJECT], variadic: true, optional: true }]],
  ['defaultsDeep', [{ types: [TYPE_OBJECT] }, { types: [TYPE_OBJECT], variadic: true, optional: true }]],
  ['entries', [{ types: [TYPE_OBJECT] }]],
  // ['entriesIn', null],
  ['extend', [{ types: [TYPE_OBJECT] }, { types: [TYPE_OBJECT], variadic: true, optional: true }]],
  // ['extendWith', null],
  ['findKey', [{ types: [TYPE_OBJECT] }, { types: [TYPE_OBJECT, TYPE_ARRAY, TYPE_STRING], optional: true }]],
  ['findLastKey', [{ types: [TYPE_OBJECT] }, { types: [TYPE_OBJECT, TYPE_ARRAY, TYPE_STRING], optional: true }]],
  // ['forIn', null],
  // ['forInRight', null],
  // ['forOwn', null],
  // ['forOwnRight', null],
  // ['functions', null],
  // ['functionsIn', null],
  ['get', [{ types: [TYPE_OBJECT] }, { types: [TYPE_ARRAY, TYPE_STRING] }, { types: TYPE_JSON, optional: true }]],
  ['has', [{ types: [TYPE_OBJECT] }, { types: [TYPE_ARRAY, TYPE_STRING] }]],
  // ['hasIn', null],
  ['invert', [{ types: [TYPE_OBJECT] }]],
  ['invertBy', [{ types: [TYPE_OBJECT] }, { types: [TYPE_OBJECT], optional: true }]],
  [
    'invoke',
    [
      { types: [TYPE_OBJECT] },
      { types: [TYPE_ARRAY, TYPE_STRING] },
      { types: TYPE_JSON, variadic: true, optional: true },
    ],
  ],
  ['keys', [{ types: [TYPE_OBJECT, TYPE_ARRAY, TYPE_STRING] }]],
  // ['keysIn', null],
  ['mapKeys', [{ types: [TYPE_OBJECT] }, { types: [TYPE_OBJECT], optional: true }]],
  ['mapValues', [{ types: [TYPE_OBJECT] }, { types: [TYPE_STRING, TYPE_OBJECT], optional: true }]],
  ['merge', [{ types: [TYPE_OBJECT] }, { types: [TYPE_OBJECT], variadic: true, optional: true }]],
  // ['mergeWith', null],
  ['omit', [{ types: [TYPE_OBJECT] }, { types: [TYPE_STRING, TYPE_ARRAY_STRING], variadic: true, optional: true }]],
  ['omitBy', [{ types: [TYPE_OBJECT] }, { types: [TYPE_OBJECT], optional: true }]],
  ['pick', [{ types: [TYPE_OBJECT] }, { types: [TYPE_STRING, TYPE_ARRAY_STRING], variadic: true, optional: true }]],
  ['pickBy', [{ types: [TYPE_OBJECT] }, { types: [TYPE_OBJECT], optional: true }]],
  // ['result', [{ types: [TYPE_OBJECT] }, { types: [TYPE_ARRAY, TYPE_STRING] }, { types: TYPE_JSON, optional: true }]],
  ['set', [{ types: [TYPE_OBJECT] }, { types: [TYPE_ARRAY, TYPE_STRING] }, { types: TYPE_JSON, optional: true }]],
  // ['setWith', null],
  ['toPairs', [{ types: [TYPE_OBJECT] }]],
  // ['toPairsIn', null],
  [
    'transform',
    [
      { types: [TYPE_ARRAY, TYPE_OBJECT, TYPE_STRING] },
      { types: [TYPE_OBJECT], optional: true },
      { types: [TYPE_OBJECT, TYPE_ARRAY], optional: true },
    ],
  ],
  ['unset', [{ types: [TYPE_OBJECT] }, { types: [TYPE_ARRAY, TYPE_STRING] }]],
  [
    'update',
    [{ types: [TYPE_OBJECT] }, { types: [TYPE_ARRAY, TYPE_STRING] }, { types: [TYPE_OBJECT], optional: true }],
  ],
  // ['updateWith', null],
  ['values', [{ types: [TYPE_OBJECT, TYPE_STRING] }]],
  // ['valuesIn', null],

  // // Seq
  //   'chain',
  //   'tap',
  //   'thru',
  //   'prototype'[Symbol.iterator],
  //   'prototype'.at,
  //   'prototype'.chain,
  //   'prototype'.commit,
  //   'prototype'.next,
  //   'prototype'.plant,
  //   'prototype'.reverse,
  //   'prototype'.toJSON,
  //   'prototype'.value,
  //   'prototype'.valueOf,

  // String
  ['camelCase', [{ types: [TYPE_STRING], optional: true }]],
  ['capitalize', [{ types: [TYPE_STRING], optional: true }]],
  ['deburr', [{ types: [TYPE_STRING], optional: true }]],
  [
    'endsWith',
    [
      { types: [TYPE_STRING], optional: true },
      { types: [TYPE_STRING], optional: true },
      { types: [TYPE_NUMBER], optional: true },
    ],
  ],
  ['escape', [{ types: [TYPE_STRING], optional: true }]],
  ['escapeRegExp', [{ types: [TYPE_STRING], optional: true }]],
  ['kebabCase', [{ types: [TYPE_STRING], optional: true }]],
  ['lowerCase', [{ types: [TYPE_STRING], optional: true }]],
  ['lowerFirst', [{ types: [TYPE_STRING], optional: true }]],
  [
    'pad',
    [
      { types: [TYPE_STRING], optional: true },
      { types: [TYPE_NUMBER], optional: true },
      { types: [TYPE_STRING], optional: true },
    ],
  ],
  [
    'padEnd',
    [
      { types: [TYPE_STRING], optional: true },
      { types: [TYPE_NUMBER], optional: true },
      { types: [TYPE_STRING], optional: true },
    ],
  ],
  [
    'padStart',
    [
      { types: [TYPE_STRING], optional: true },
      { types: [TYPE_NUMBER], optional: true },
      { types: [TYPE_STRING], optional: true },
    ],
  ],
  ['parseInt', [{ types: [TYPE_STRING] }, { types: [TYPE_NUMBER], optional: true }]],
  [
    'repeat',
    [
      { types: [TYPE_STRING], optional: true },
      { types: [TYPE_NUMBER], optional: true },
    ],
  ],
  [
    'replace',
    [
      { types: [TYPE_STRING] },
      { types: [TYPE_STRING, TYPE_OBJECT], optional: true },
      { types: [TYPE_STRING, TYPE_OBJECT], optional: true },
    ],
  ],
  ['snakeCase', [{ types: [TYPE_STRING], optional: true }]],
  [
    'split',
    [
      { types: [TYPE_STRING], optional: true },
      { types: [TYPE_STRING, TYPE_OBJECT] },
      { types: [TYPE_NUMBER], optional: true },
    ],
  ],
  ['startCase', [{ types: [TYPE_STRING], optional: true }]],
  [
    'startsWith',
    [
      { types: [TYPE_STRING], optional: true },
      { types: [TYPE_STRING], optional: true },
      { types: [TYPE_NUMBER], optional: true },
    ],
  ],
  // ['template', [{ types: [TYPE_STRING], optional: true }]],
  ['toLower', [{ types: [TYPE_STRING], optional: true }]],
  ['toUpper', [{ types: [TYPE_STRING], optional: true }]],
  [
    'trim',
    [
      { types: [TYPE_STRING], optional: true },
      { types: [TYPE_STRING], optional: true },
    ],
  ],
  [
    'trimEnd',
    [
      { types: [TYPE_STRING], optional: true },
      { types: [TYPE_STRING], optional: true },
    ],
  ],
  [
    'trimStart',
    [
      { types: [TYPE_STRING], optional: true },
      { types: [TYPE_STRING], optional: true },
    ],
  ],
  // ['truncate', [{ types: [TYPE_STRING], optional: true }]],
  ['unescape', [{ types: [TYPE_STRING], optional: true }]],
  ['upperCase', [{ types: [TYPE_STRING], optional: true }]],
  ['upperFirst', [{ types: [TYPE_STRING], optional: true }]],
  [
    'words',
    [
      { types: [TYPE_STRING], optional: true },
      { types: [TYPE_STRING, TYPE_OBJECT], optional: true },
    ],
  ],

  // // Util
  // ['attempt', null],
  // ['bindAll', null],
  // ['cond', null],
  // ['conforms', null],
  // ['constant', null],
  // ['defaultTo', null],
  // ['flow', null],
  // ['flowRight', null],
  // ['identity', null],
  // ['iteratee', null],
  // ['matches', null],
  // ['matchesProperty', null],
  // ['method', null],
  // ['methodOf', null],
  // ['mixin', null],
  // ['noConflict', null],
  // ['noop', null],
  // ['nthArg', null],
  // ['over', null],
  // ['overEvery', null],
  // ['overSome', null],
  // ['property', null],
  // ['propertyOf', null],
  [
    'range',
    [{ types: [TYPE_NUMBER], optional: true }, { types: [TYPE_NUMBER] }, { types: [TYPE_NUMBER], optional: true }],
  ],
  [
    'rangeRight',
    [{ types: [TYPE_NUMBER], optional: true }, { types: [TYPE_NUMBER] }, { types: [TYPE_NUMBER], optional: true }],
  ],

  // ['runInContext', null],
  // ['stubArray', null],
  // ['stubFalse', null],
  // ['stubObject', null],
  // ['stubString', null],
  // ['stubTrue', null],
  // ['times', null],
  // ['toPath', null],
  // ['uniqueId', null],
];
